
default_platform(:ios)

def match_certificates_and_build(scheme, bundleID)
  match(git_url: ENV["CERTS_GIT_URL"],
    readonly: true,
    type: "appstore",
    app_identifier: [bundleID]
  )
  build_app(scheme: scheme)
end

def testflight_build
  desc "Uploading TestFlight build"
  match_certificates_and_build(ENV["DEFAULT_SCHEME_NAME"], ENV["APP_IDENTIFIER"])
  upload_to_testflight(app_identifier: ENV["APP_IDENTIFIER"])
end


platform :ios do
  # If you already updated version
  lane :deploy do
    desc "Push build to TestFlight without version update"
    testflight_build
  end

  lane :deployBuild do
    desc "Push a new build to TestFlight"
    increment_build_number
    testflight_build
  end

  lane :deployPatch do
    desc "Release a new patch to TestFlight"
    increment_version_number_in_xcodeproj(bump_type: "patch", target: ENV["DEFAULT_SCHEME_NAME"])
    increment_build_number
    testflight_build
  end

  lane :deployMinor do
    desc "Release minor changes to TestFlight"
    increment_version_number_in_xcodeproj(bump_type: "minor", target: ENV["DEFAULT_SCHEME_NAME"])
    increment_build_number
    testflight_build
  end

  lane :deployMajor do
    desc "Release major changes to TestFlight"
    increment_version_number_in_xcodeproj(bump_type: "major", target: ENV["DEFAULT_SCHEME_NAME"])
    increment_build_number
    testflight_build
  end
end